{
  "App": {
    "Name": "Dwt",
    "Version": "0.0.0",
    "Description": "Dotnet Web API Template"
  },

  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },

  "AllowedHosts": "*",

  // Supported database types:
  // - InMemory (or Memory): in-memory database, not for production use! No connection string required.
  // - SQLite: not for production use! Connection string format: "Data Source=<directory>/<database>.db"
  // - SQLServer: LocalDb connection string: "Server=(localdb)\\mssqllocaldb;Database=RazorPagesPizza;Trusted_Connection=True;MultipleActiveResultSets=true"
  "DatabaseTypes": {
    "Identity": "SQLSERVER",
    //"Application": "SQLite",
    "Application": "SQLSERVER"
  },

  // Supported cache types:
  // - Memory: in-memory cache, good for development and testing; or for usecases where application is running on a single instance and memory usage is not a concern.
  // - Redis: distributed cache, good for production use; sample connection string format: "localhost:6379,abortConnect=false"
  "Caches": {
    "Application": {
      "Type": "Memory",
      "SizeLimit": 100000000, // in bytes, ~100mb
      "Expiration": 3600 // in seconds, 1 hour
    }
  },

  "ConnectionStrings": {
    "IdentityDbContext": "Server=(localdb)\\mssqllocaldb;Database=DwtIdentity;Trusted_Connection=True;MultipleActiveResultSets=true",
    //"ApplicationDbContext": "Data Source=./data/sqlite/application.db",
    "ApplicationDbContext": "Server=(localdb)\\mssqllocaldb;Database=DwtApi;Trusted_Connection=True;MultipleActiveResultSets=true"
  },

  // Cryptography keys
  "Keys": {
    // Path to the PFX file and password to open it. The PFX file must contain a RSA private key.
    "RSAPFXFile": "./config/cert.pfx",
    "RSAPFXPassword": "S2cretP2ssword",

    // Or, path to the RSA private key file. The file must be in PEM format.
    // Note: if both RSAPFXFile and RSAPrivKeyFile are provided, RSAPFXFile will take precedence.
    "RSAPrivKeyFile": "./config/private-key.pem"
  },

  "Jwt": {
    "Issuer": "dotnet-webapi-template",
    "Audience": "http://localhost:8080",
    "Expiration": 7200 // default expiration time in seconds
    //"Key": "S3cretK3yP@dd1ngzJh^H/9V+q),c'8I", // (min size = 32 bytes) if not empty the JWT will be signed with this key using HMACSHA256; otherwise, it will be signed with the RSA private key using RSASHA256
  }
}
